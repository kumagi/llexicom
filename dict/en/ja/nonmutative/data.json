{"word":"nonmutative","priority":"☆☆☆","meanings":[{"part_of_speech":"adjective","definition":"(プログラミング) 非破壊的な、元のデータを変更しない","english_definition":"(of a function or operation in programming) not changing the original data structure or object; creating a new one instead.","examples":[{"sentence":"The `map` function is nonmutative; it returns a new array with the transformed elements.","translation":"`map`関数は非破壊的です。変換された要素を持つ新しい配列を返します。"},{"sentence":"Using nonmutative operations can help prevent unexpected side effects in your code.","translation":"非破壊的な操作を使用すると、コード内の予期しない副作用を防ぐのに役立ちます。"}],"collocations":["nonmutative function","nonmutative operation","nonmutative method"],"synonyms":["immutable","pure","side-effect-free"],"antonyms":["mutative","destructive"]}],"etymology":{"value":"\"non-\" (否定) + \"mutative\" (変化させる)","priority":"★★★"},"pronunciation":{"ipa":"/ˌnɒnˈmjuːtətɪv/","syllables":"non-mu-ta-tive"},"inflection":{"notes":"形容詞なので、比較級・最上級の変化はありません。"},"usage_notes":{"explanation":"「**nonmutative**」は主にプログラミングの文脈で使用される用語で、関数や操作が元のデータ構造やオブジェクトを変更せず、代わりに新しいコピーを作成して変更を加えることを指します。これは、関数型プログラミングの原則であるイミュータビリティ（不変性）と密接に関連しています。非破壊的な操作を使用することで、コードの予測可能性を高め、デバッグを容易にすることができます。","priority":"★★★"},"common_mistakes":{"examples":[{"incorrect":"✗ The sort function is nonmutative, so it changes the original array.","correct":"✓ The sort function is mutative, so it changes the original array.","note":"`sort`関数は通常、元の配列を直接変更する破壊的な関数です。非破壊的なソートを行うには、配列のコピーを作成してからソートする必要があります。"},{"incorrect":"✗ Nonmutative functions are always faster because they don't modify data.","correct":"✓ Nonmutative functions are not always faster; creating new copies can sometimes be less efficient.","note":"非破壊的な関数は、新しいコピーを作成する必要があるため、必ずしも高速であるとは限りません。パフォーマンスは、具体的な実装とデータのサイズに依存します。"}],"priority":"★★☆"},"related_words":{"derivatives":["mutation (名詞: 変化、変異)","mutate (動詞: 変化する、変異する)","mutative (形容詞: 変化させる)","immutability (名詞: 不変性)","immutable (形容詞: 不変の)"],"priority":"★★☆"},"level_frequency":{"CEFR":"C2","frequency_google_ngram":"低頻度 (Low frequency) - プログラミング関連の専門用語。","priority":"★☆☆"},"readability_explanation":{"level":"C1","text":"「**nonmutative**」は、プログラミングで使われる言葉で、「元のデータを変えない」という意味です。関数が「nonmutative（非破壊的）」である場合、その関数は元のデータ構造を変更せずに、新しいデータ構造を作って返します。これは、プログラムが複雑になったときに、データの状態を管理しやすくするために重要な考え方です。例えば、配列をソートするときに、元の配列を変更せずに新しいソートされた配列を作る関数は「nonmutative」です。"},"example_sentences":[{"sentence":"The `concat` method in JavaScript is **nonmutative**; it returns a new array.","translation":"JavaScriptの`concat`メソッドは非破壊的です。新しい配列を返します。","type":"adjective","meaning_category":"非破壊的な"},{"sentence":"Using **nonmutative** updates in Redux helps ensure predictable state changes.","translation":"Reduxで非破壊的な更新を使用すると、予測可能な状態変化を保証するのに役立ちます。","type":"adjective","meaning_category":"非破壊的な"},{"sentence":"A **nonmutative** data structure is one that cannot be modified after it is created.","translation":"非破壊的なデータ構造とは、作成後に変更できないデータ構造のことです。","type":"adjective","meaning_category":"非破壊的な"}]}