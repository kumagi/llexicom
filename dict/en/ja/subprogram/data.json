{"word":"subprogram","priority":"★★☆","meanings":[{"part_of_speech":"noun","definition":"サブプログラム、副プログラム","english_definition":"a secondary or subordinate program; a section of code that performs a specific task within a larger program.","examples":[{"sentence":"The main program calls several subprograms to perform calculations.","translation":"メインプログラムは計算を行うために複数のサブプログラムを呼び出す。"},{"sentence":"This subprogram handles all the file input/output operations.","translation":"このサブプログラムは全てのファイル入出力操作を処理する。"}],"collocations":["call a subprogram (サブプログラムを呼び出す)","define a subprogram (サブプログラムを定義する)","nest subprograms (サブプログラムをネストする)","recursive subprogram (再帰的サブプログラム)"],"synonyms":["subroutine","function","procedure","module","method"],"antonyms":["main program"]}],"etymology":{"value":"接頭辞 'sub-' (下位の、副) + 'program' (プログラム) の合成語。計算機科学の分野で1950年代頃から使用されるようになった。","priority":"★☆☆"},"pronunciation":{"ipa":"/ˈsʌbˌproʊɡræm/","syllables":"sub-pro-gram"},"inflection":{"noun_plural":"subprograms"},"usage_notes":{"explanation":"「**subprogram**」は主にプログラミング分野で使用される専門用語です。大規模なプログラムを構造化する際に、特定の機能を独立させたコードブロックを指します。同義語として 'subroutine'、'function'、'procedure' などがありますが、言語によってニュアンスが異なる場合があります。例えば、値を返す場合は 'function'、返さない場合は 'procedure' と呼び分ける言語もあります。","priority":"★★☆"},"common_mistakes":{"examples":[{"incorrect":"✗ The subprogram are called multiple times.","correct":"✓ The subprogram is called multiple times.","note":"'subprogram' は単数形です。複数形は 'subprograms' になります。"},{"incorrect":"✗ We need to program a sub for this task.","correct":"✓ We need to write a subprogram for this task.","note":"専門用語としては省略形 'sub' よりも正式な 'subprogram' を使用するのが適切です。"}],"priority":"★☆☆"},"related_words":{"derivatives":[],"technical_terms":["function (関数)","method (メソッド)","procedure (プロシージャ)","module (モジュール)","routine (ルーチン)","callback (コールバック)","recursion (再帰)"],"priority":"★★☆"},"level_frequency":{"CEFR":"Not applicable (専門用語)","frequency_google_ngram":"低頻度 (Low frequency) - 専門分野限定の使用","priority":"★☆☆"},"readability_explanation":{"level":"C1/C2","text":"「**subprogram**」はプログラミングに関する専門用語で、大規模なプログラムを小さな部品に分割する際に使用される概念です。メインプログラムから呼び出されて特定の処理を行い、結果を返す独立したコードの塊を指します。プログラムの可読性や保守性を高めるために重要な構造化プログラミングの手法です。"},"example_sentences":[{"sentence":"Each **subprogram** should have a single, well-defined purpose.","translation":"各サブプログラムは単一の明確な目的を持つべきである。","type":"noun","meaning_category":"プログラミング構造"},{"sentence":"The error occurred in a deeply nested **subprogram**.","translation":"エラーは深くネストされたサブプログラム内で発生した。","type":"noun","meaning_category":"プログラミング構造"},{"sentence":"This **subprogram** takes two parameters and returns a boolean value.","translation":"このサブプログラムは2つのパラメータを受け取り、ブール値を返す。","type":"noun","meaning_category":"プログラミング構造"}]}