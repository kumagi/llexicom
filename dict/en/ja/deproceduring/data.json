{"word":"deproceduring","priority":"☆☆☆","meanings":[{"part_of_speech":"verb","definition":"(プログラミング)手続き型プログラミングから脱却すること、または手続き型ではないアプローチに変換すること","english_definition":"(programming) The act of moving away from procedural programming, or converting to a non-procedural approach.","examples":[{"sentence":"The team is deproceduring the legacy system to make it more maintainable.","translation":"チームはレガシーシステムをより保守しやすくするために、手続き型プログラミングから脱却している。"},{"sentence":"Deproceduring often involves refactoring code into smaller, more modular components.","translation":"手続き型プログラミングからの脱却には、コードをより小さく、よりモジュール化されたコンポーネントにリファクタリングすることがしばしば伴う。"}],"collocations":["deproceduring a system (システムを手続き型プログラミングから脱却させる)","deproceduring code (コードを手続き型プログラミングから脱却させる)"],"synonyms":["refactoring","restructuring","rearchitecting"],"antonyms":["proceduralizing"]}],"etymology":{"value":"「de-」(否定接頭辞) + 「proceduring」(procedural programming (手続き型プログラミング) から派生)","priority":"★★★"},"pronunciation":{"ipa":"/diːprəˈsiːdʒərɪŋ/","syllables":"de-pro-ce-dur-ing"},"inflection":{"verb_forms":{"present_simple":["deprocedures"],"past_simple":"deprocedured","past_participle":"deprocedured","present_participle":"deproceduring"}},"usage_notes":{"explanation":"「**deproceduring**」は、主にプログラミングの文脈で使用される専門用語です。手続き型プログラミングのパラダイムから離れ、オブジェクト指向プログラミングや関数型プログラミングなどのより現代的なアプローチに移行するプロセスを指します。この用語は、既存のコードベースをリファクタリングして、保守性、拡張性、テスト容易性を向上させる場合によく使用されます。","priority":"★★☆"},"common_mistakes":{"examples":[{"incorrect":"✗ We are deproceduring the database.","correct":"✓ We are refactoring the database schema.","note":"データベース自体は「deproceduring」されるものではなく、データベースのスキーマやアクセス方法がリファクタリングされることが多いです。"},{"incorrect":"✗ Deproceduring is a simple task.","correct":"✓ Deproceduring can be a complex and time-consuming task.","note":"手続き型プログラミングからの脱却は、多くの場合、コードの深い理解と慎重な計画を必要とする複雑な作業です。"}],"priority":"★★☆"},"related_words":{"derivatives":["deprocedure (名詞: 手続き型プログラミングからの脱却)"],"related_concepts":["procedural programming (手続き型プログラミング)","object-oriented programming (オブジェクト指向プログラミング)","functional programming (関数型プログラミング)","refactoring (リファクタリング)","legacy code (レガシーコード)"],"priority":"★★★"},"level_frequency":{"CEFR":"N/A (専門用語)","frequency_google_ngram":"非常に低頻度 (Very low frequency) - プログラミング関連の専門的な文脈でのみ使用される。","priority":"★☆☆"},"readability_explanation":{"level":"C2","text":"「**deproceduring**」は、ソフトウェア開発における専門用語であり、手続き型プログラミングから別のプログラミングパラダイム（オブジェクト指向、関数型など）への移行を指します。これは、コードの構造を改善し、保守性、拡張性、テスト容易性を高めるために行われます。このプロセスは通常、既存のコードのリファクタリングや再設計を伴い、ソフトウェアアーキテクチャに関する深い知識が必要です。一般の読者には馴染みのない用語です。"},"example_sentences":[{"sentence":"The company decided to start **deproceduring** its core applications to improve performance.","translation":"会社はパフォーマンスを向上させるために、コアアプリケーションの手続き型プログラミングからの脱却を開始することを決定した。","type":"verb","meaning_category":"プログラミングからの脱却"},{"sentence":"**Deproceduring** the system required a significant investment in training and new tools.","translation":"システムの手続き型プログラミングからの脱却には、トレーニングと新しいツールへの多大な投資が必要だった。","type":"verb","meaning_category":"プログラミングからの脱却"},{"sentence":"The benefits of **deproceduring** include increased code reusability and reduced complexity.","translation":"手続き型プログラミングからの脱却の利点には、コードの再利用性の向上と複雑さの軽減が含まれる。","type":"verb","meaning_category":"プログラミングからの脱却"}]}