{"word":"PEXSI","priority":"☆☆☆","meanings":[{"part_of_speech":"acronym","definition":"Permutation Expansion based Sparse Inverse","english_definition":"A method for computing selected elements of the inverse of a sparse matrix.","examples":[{"sentence":"The PEXSI library is used in electronic structure calculations.","translation":"PEXSIライブラリは電子構造計算で使用されます。"}],"collocations":["PEXSI library","PEXSI decomposition","PEXSI solver"],"synonyms":[],"antonyms":[]}],"etymology":{"value":"The acronym PEXSI stands for Permutation Expansion based Sparse Inverse.","priority":"★★★"},"pronunciation":{"ipa":"/ˈpɛksi/","syllables":"PEX-SI"},"inflection":{},"usage_notes":{"explanation":"PEXSI is a computational method, often implemented as a software library, used in scientific computing, particularly in electronic structure theory and related fields. It provides an efficient way to compute selected elements of the inverse of a large, sparse matrix, which is a common task in these applications.","priority":"★★★"},"common_mistakes":{},"related_words":{"derivatives":[],"related_terms":["sparse matrix","matrix inversion","electronic structure calculation","density functional theory (DFT)"],"priority":"★★★"},"level_frequency":{},"readability_explanation":{"level":"Advanced","text":"PEXSI is a specialized term in the field of computational science, particularly related to sparse matrix computations and electronic structure calculations. Understanding it requires familiarity with linear algebra and numerical methods. It is not a commonly used term outside of these specific areas."},"example_sentences":[{"sentence":"The computational cost of inverting the Kohn-Sham matrix is significantly reduced by using the PEXSI method.","translation":"コーン-シャム行列の反転の計算コストは、PEXSI法を使用することで大幅に削減されます。","type":"technical","meaning_category":"matrix inversion"},{"sentence":"We implemented the PEXSI solver to accelerate the self-consistent field (SCF) calculations.","translation":"自己無撞着場（SCF）計算を高速化するために、PEXSIソルバーを実装しました。","type":"technical","meaning_category":"solver implementation"}]}