{"word":"subroutine","priority":"★★☆","meanings":[{"part_of_speech":"noun","definition":"サブルーチン、副プログラム","english_definition":"A sequence of instructions within a larger computer program that performs a specific task.","examples":[{"sentence":"The main program calls the subroutine to perform the calculation.","translation":"メインプログラムは、計算を実行するためにサブルーチンを呼び出します。"},{"sentence":"This subroutine handles the input validation.","translation":"このサブルーチンは入力の検証を処理します。"},{"sentence":"We can reuse this subroutine in other programs.","translation":"このサブルーチンは他のプログラムで再利用できます。"}],"collocations":["call a subroutine","write a subroutine","reuse a subroutine","subroutine call","subroutine library"],"synonyms":["function","procedure","method","module"],"antonyms":["main program"],"related_terms":["parameter","argument","return value","stack","recursion"]}],"etymology":{"value":"'Sub-' meaning 'under' or 'below', and 'routine' meaning a sequence of actions or instructions. The term suggests a routine that is subordinate to the main program.","priority":"★★☆"},"pronunciation":{"ipa":"/ˈsʌbruːˌtiːn/","syllables":"sub-rou-tine"},"inflection":{"noun_plural":"subroutines"},"usage_notes":{"explanation":"A subroutine is a self-contained block of code that performs a specific task within a larger program. It can be called multiple times from different parts of the program, reducing code duplication and improving modularity. Subroutines can accept input values (parameters or arguments) and return a result. They are fundamental to structured programming.","priority":"★★★"},"common_mistakes":{"examples":[{"incorrect":"✗ The subroutine is a main program.","correct":"✓ The subroutine is part of a main program.","note":"A subroutine is a component of a larger program, not a program itself."},{"incorrect":"✗ Subroutines are not reusable.","correct":"✓ Subroutines are reusable.","note":"One of the key benefits of subroutines is their reusability."}],"priority":"★★☆"},"related_words":{"derivatives":["subprogram"],"related_terms":["function","procedure","method","module","algorithm"]},"level_frequency":{"CEFR":"C1","frequency_google_ngram":"Low","priority":"★☆☆"},"readability_explanation":{"level":"C1","text":"'Subroutine' refers to a block of code designed to perform a specific task within a larger program. It's a key concept in programming that promotes code reusability and modularity. Understanding subroutines is crucial for comprehending how complex software is structured and organized. The term is typically encountered in the context of computer science and software development.","priority":"★★☆"},"example_sentences":[{"sentence":"The sort function is implemented as a **subroutine**.","translation":"ソート関数はサブルーチンとして実装されています。","type":"general","meaning_category":"definition"},{"sentence":"The **subroutine** returns the calculated value.","translation":"サブルーチンは計算された値を返します。","type":"general","meaning_category":"usage"},{"sentence":"We modularized the code by breaking it into smaller **subroutines**.","translation":"コードをより小さなサブルーチンに分割することで、モジュール化しました。","type":"general","meaning_category":"benefit"}]}