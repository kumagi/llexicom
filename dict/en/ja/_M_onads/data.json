{"word":"Monads","priority":"☆☆☆","meanings":[{"part_of_speech":"noun","definition":"(哲学)モナド：ライプニッツ哲学における、分割不可能な、精神的な実体。宇宙を構成する究極の要素。","english_definition":"(philosophy) In Leibniz's philosophy, an indivisible and indestructible elementary unit of existence or perception.","examples":[{"sentence":"Leibniz believed that the universe is composed of simple substances called monads.","translation":"ライプニッツは、宇宙はモナドと呼ばれる単純な実体で構成されていると信じていた。"},{"sentence":"Each monad is unique and reflects the entire universe from its own perspective.","translation":"各モナドは固有であり、独自の視点から宇宙全体を反映している。"}],"collocations":["Leibnizian monads (ライプニッツのモナド)","windowless monads (窓のないモナド)","pre-established harmony of monads (モナドの予定調和)"],"synonyms":["atom","element","unit","individual"],"antonyms":["aggregate","whole","system"]},{"part_of_speech":"noun","definition":"(プログラミング)モナド：関数型プログラミングにおける、ある種の計算を構造化するためのデザインパターン。副作用を伴う計算を純粋関数型言語で扱うために用いられる。","english_definition":"(programming) In functional programming, a design pattern that structures computations in terms of values and sequences of computations operating on those values. Monads are used to manage side effects in pure functional languages.","examples":[{"sentence":"Monads allow you to chain operations while managing state and side effects.","translation":"モナドを使用すると、状態と副作用を管理しながら操作を連鎖させることができる。"},{"sentence":"The Maybe monad is used to handle computations that might fail.","translation":"Maybeモナドは、失敗する可能性のある計算を処理するために使用される。"},{"sentence":"Understanding monads is crucial for writing complex functional programs.","translation":"モナドを理解することは、複雑な関数型プログラムを作成するために不可欠である。"}],"collocations":["Maybe monad (Maybeモナド)","IO monad (IOモナド)","State monad (Stateモナド)","List monad (Listモナド)","monadic computation (モナド計算)","monadic bind (モナド束縛)"],"synonyms":["design pattern","computational context","abstraction"],"antonyms":[]}],"etymology":{"value":"ギリシャ語の「monas」（単一、単位）に由来。ライプニッツが哲学的な概念として使用し、その後、プログラミングの分野でデザインパターンとして採用された。","priority":"★★☆"},"pronunciation":{"ipa":"ˈmɒnædz","syllables":"Mon-ads"},"inflection":{"noun_plural":"Monads (already plural form)"},"usage_notes":{"explanation":"「**Monads**」は、文脈によって意味が大きく異なる単語です。\n1.  **哲学**: ライプニッツ哲学における基本概念であり、宇宙を構成する最小単位、分割不可能な精神的な実体を指します。各モナドは宇宙全体を反映していますが、他のモナドとの直接的な相互作用はありません（「窓がない」と表現されます）。\n2.  **プログラミング**: 関数型プログラミングにおけるデザインパターンであり、副作用を伴う計算を純粋関数型言語で扱うための抽象化です。状態管理、例外処理、入出力処理などをモナドを使って行うことができます。Haskellなどの関数型言語で重要な概念です。\nプログラミングにおけるモナドは、哲学的なモナドからインスピレーションを受けていますが、直接的な関係はありません。","priority":"★★☆"},"common_mistakes":{"examples":[{"incorrect":"✗ I use monads to define classes in object-oriented programming.","correct":"✓ I use monads to structure computations in functional programming.","note":"モナドは関数型プログラミングの概念であり、オブジェクト指向プログラミングとは異なるパラダイムで使用されます。"},{"incorrect":"✗ Monads are easy to understand.","correct":"✓ Monads can be challenging to understand initially.","note":"モナドは抽象的な概念であり、理解するにはある程度の学習が必要です。"}],"priority":"★★☆"},"related_words":{"derivatives":["monadic (形容詞: モナドの、モナド的な)"],"related_concepts":["functional programming (関数型プログラミング)","side effects (副作用)","pure functions (純粋関数)","Haskell (ハスケル)","Leibnizian philosophy (ライプニッツ哲学)"],"priority":"★★☆"},"level_frequency":{"CEFR":"C2 (哲学、高度なプログラミングの文脈)","frequency_google_ngram":"低頻度 (Low frequency) - 特定の分野でのみ使用される専門用語。","priority":"★☆☆"},"readability_explanation":{"level":"C1","text":"「**Monads**」は、哲学または関数型プログラミングという特定の分野でのみ使用される専門用語です。哲学では、ライプニッツの哲学における宇宙を構成する分割不可能な精神的な実体を指します。関数型プログラミングでは、副作用を管理し、計算を構造化するためのデザインパターンです。この単語に出会うのは、これらの分野を深く学んでいる場合に限られるでしょう。初学者には難しい概念です。"},"example_sentences":[{"sentence":"In Leibniz's philosophy, **monads** are the fundamental building blocks of reality.","translation":"ライプニッツの哲学では、モナドは現実の基本的な構成要素である。","type":"noun","meaning_category":"哲学"},{"sentence":"**Monads** provide a way to handle stateful computations in Haskell.","translation":"モナドは、Haskellで状態を持つ計算を処理する方法を提供する。","type":"noun","meaning_category":"プログラミング"},{"sentence":"Understanding **monads** is essential for mastering advanced functional programming techniques.","translation":"モナドを理解することは、高度な関数型プログラミングのテクニックを習得するために不可欠である。","type":"noun","meaning_category":"プログラミング"}]}