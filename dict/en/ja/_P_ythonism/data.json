{"word":"Pythonism","priority":"☆☆☆","meanings":[{"part_of_speech":"noun","definition":"Pythonicなコード、Pythonらしい書き方、Python特有のイディオムやコーディングスタイル","english_definition":"A coding style or idiom that is characteristic of the Python programming language; code that follows the principles and philosophy of Python.","examples":[{"sentence":"Using list comprehensions is a common Pythonism.","translation":"リスト内包表記を使うのは一般的なPythonismです。"},{"sentence":"The 'with' statement for resource management is a Pythonism.","translation":"リソース管理のための'with'ステートメントはPythonismです。"},{"sentence":"Experienced Python developers often use Pythonisms to write concise and readable code.","translation":"経験豊富なPython開発者は、簡潔で読みやすいコードを書くためにPythonismをよく使用します。"}],"collocations":["common Pythonism","Pythonic code","idiomatic Python","write Pythonically","Python best practices"],"synonyms":["Pythonic code","idiomatic Python","Python style","Python best practice"],"antonyms":["unpythonic code","non-idiomatic Python","anti-pattern (in some contexts)"]},{"part_of_speech":"noun","definition":"Pythonプログラミング言語に特有の機能や構文","english_definition":"A feature, syntax, or construct that is specific to the Python programming language.","examples":[{"sentence":"Duck typing is a Pythonism that allows for flexible polymorphism.","translation":"ダックタイピングは、柔軟なポリモーフィズムを可能にするPythonismです。"},{"sentence":"Generators are a Pythonism that enables efficient iteration.","translation":"ジェネレータは、効率的なイテレーションを可能にするPythonismです。"},{"sentence":"The use of decorators is a powerful Pythonism for metaprogramming.","translation":"デコレータの使用は、メタプログラミングのための強力なPythonismです。"}],"collocations":["language feature","syntax construct","Python specific","unique to Python"],"synonyms":["Python feature","Python syntax","Python construct"],"antonyms":["common programming construct","cross-language feature"]}],"etymology":{"value":"The term 'Pythonism' is derived from the name of the Python programming language, combined with the suffix '-ism,' which denotes a characteristic style, principle, or feature. It implies adherence to the principles and philosophy of Python programming.","priority":"★★☆"},"pronunciation":{"ipa":"/ˈpaɪθənɪzəm/","syllables":"Py-thon-ism"},"inflection":{"noun_plural":"Pythonisms"},"usage_notes":{"explanation":"'Pythonism' refers to code that is not only syntactically correct in Python but also embodies the language's design principles, such as readability, simplicity, and explicitness. It often involves using Python-specific features and idioms in a way that is considered elegant and efficient. Writing Pythonic code (using Pythonisms) is generally encouraged in the Python community.","priority":"★★★"},"common_mistakes":{"examples":[{"incorrect":"✗ Using Java-style loops is a good Pythonism.","correct":"✓ Using 'for' loops with iterators is a good Pythonism.","note":"Java-style loops are not considered Pythonic. Python favors iterators and 'for' loops that directly iterate over elements. "},{"incorrect":"✗ Writing very complex one-liners is always a Pythonism.","correct":"✓ Writing concise and readable code is a good Pythonism.","note":"While Python allows for concise code, readability is a key principle. Overly complex one-liners that are difficult to understand are generally discouraged."}],"priority":"★★☆"},"related_words":{"derivatives":["Pythonic (adjective: characteristic of Python; following Python principles)","Pythonista (noun: a Python enthusiast or expert)"],"idioms_phrases":["There's a Pythonic way to do it. (referring to the idea that Python has a preferred, elegant way to solve problems)"],"priority":"★★★"},"level_frequency":{"CEFR":"C2","frequency_google_ngram":"Low frequency (technical term)","priority":"★☆☆"},"readability_explanation":{"level":"C1","text":"'Pythonism' is a term used in the context of Python programming to describe code that is written in a style that is considered characteristic of the language. It encompasses the use of Python-specific features, idioms, and best practices to create code that is readable, concise, and efficient. Understanding Pythonisms is important for writing code that is not only correct but also aligned with the Python community's standards and expectations."},"example_sentences":[{"sentence":"One popular Pythonism is the use of list comprehensions for creating lists in a concise way.","translation":"一般的なPythonismの1つは、リストを簡潔に作成するためのリスト内包表記の使用です。","type":"noun","meaning_category":"Pythonic code"},{"sentence":"Using generators instead of creating large lists in memory is a Pythonism that improves performance.","translation":"メモリに大きなリストを作成する代わりにジェネレーターを使用することは、パフォーマンスを向上させるPythonismです。","type":"noun","meaning_category":"Python feature"},{"sentence":"Adopting Pythonisms can greatly enhance the readability and maintainability of your code.","translation":"Pythonismを採用することで、コードの可読性と保守性が大幅に向上します。","type":"noun","meaning_category":"Pythonic code"}]}