{"word":"OOP","priority":"★★☆","meanings":[{"part_of_speech":"noun","definition":"オブジェクト指向プログラミング (Object-Oriented Programming)","english_definition":"Object-Oriented Programming: a programming paradigm based on the concept of \"objects\", which may contain data, in the form of fields (often known as attributes or properties), and code, in the form of procedures (often known as methods).","examples":[{"sentence":"OOP is a popular programming paradigm.","translation":"OOPは人気のあるプログラミングパラダイムです。"},{"sentence":"Many modern programming languages support OOP.","translation":"多くの現代的なプログラミング言語はOOPをサポートしています。"},{"sentence":"Understanding OOP concepts is essential for software development.","translation":"OOPの概念を理解することは、ソフトウェア開発に不可欠です。"}],"collocations":["OOP concepts (OOPの概念)","OOP principles (OOPの原則)","OOP design (OOPの設計)","OOP language (OOP言語)","OOP paradigm (OOPパラダイム)"],"synonyms":["object-oriented programming","object paradigm"],"antonyms":["procedural programming","functional programming"]}],"etymology":{"value":"OOPは、Object-Oriented Programmingの略語です。","priority":"★★★"},"pronunciation":{"ipa":"/ˌoʊˌoʊˈpiː/","syllables":"O-O-P"},"inflection":{"notes":"名詞なので、複数形はありません。"},"usage_notes":{"explanation":"OOPは、オブジェクト指向プログラミングの略語であり、ソフトウェア開発における主要なプログラミングパラダイムの一つです。オブジェクト指向プログラミングでは、データとそれを操作するメソッドをオブジェクトという単位にまとめ、それらのオブジェクトを組み合わせてプログラムを構築します。カプセル化、継承、ポリモーフィズムなどの概念が重要です。","priority":"★★★"},"common_mistakes":{"examples":[{"incorrect":"✗ I'm learning OOPs.","correct":"✓ I'm learning OOP.","note":"OOPは略語であり、複数形はありません。"},{"incorrect":"✗ OOP are difficult.","correct":"✓ OOP is difficult.","note":"OOPは単一の概念を指すため、動詞は単数形を使用します。"}],"priority":"★★☆"},"related_words":{"derivatives":["object (オブジェクト)","class (クラス)","inheritance (継承)","polymorphism (ポリモーフィズム)","encapsulation (カプセル化)","method (メソッド)","attribute (属性)"],"priority":"★★★"},"level_frequency":{"CEFR":"C1","frequency_google_ngram":"比較的低頻度 (Relatively low frequency) - プログラミング関連の文脈でよく使われる。","priority":"★☆☆"},"readability_explanation":{"level":"C1","text":"「**OOP**」は、Object-Oriented Programming（オブジェクト指向プログラミング）の略で、ソフトウェアを作る上での考え方の一つです。プログラムを「オブジェクト」という部品の集まりとして捉え、それらを組み合わせてシステムを構築します。オブジェクトは、データ（属性）と、そのデータを操作する命令（メソッド）を一緒に持っています。カプセル化、継承、ポリモーフィズムといった概念が重要です。プログラミングの専門用語なので、一般的な会話ではあまり使いません。"},"example_sentences":[{"sentence":"The project was developed using OOP principles.","translation":"そのプロジェクトはOOPの原則を用いて開発されました。","type":"noun","meaning_category":"オブジェクト指向プログラミング"},{"sentence":"Java is a well-known OOP language.","translation":"Javaはよく知られたOOP言語です。","type":"noun","meaning_category":"オブジェクト指向プログラミング"},{"sentence":"OOP promotes code reusability and maintainability.","translation":"OOPはコードの再利用性と保守性を促進します。","type":"noun","meaning_category":"オブジェクト指向プログラミング"}]}