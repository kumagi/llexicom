{"word":"coroutine","priority":"★★☆","meanings":[{"part_of_speech":"noun","definition":"コルーチン (サブルーチンを一般化したもので、複数の入口点を持つことができる)","english_definition":"A computer program component that generalizes subroutines for non-preemptive multitasking, by allowing multiple entry points for suspending and resuming execution at certain locations.","examples":[{"sentence":"Coroutines are useful for implementing cooperative multitasking.","translation":"コルーチンは協調的マルチタスクを実装するのに役立ちます。"},{"sentence":"The coroutine can suspend its execution and later resume from where it left off.","translation":"コルーチンは実行を一時停止し、後で中断した場所から再開できます。"}],"collocations":["implement a coroutine","suspend a coroutine","resume a coroutine","yield from a coroutine"],"synonyms":["lightweight thread","cooperative routine"],"antonyms":["subroutine","function"]}],"etymology":{"value":"「co-」(共同) + 「routine」(ルーチン、サブルーチン) からの造語。サブルーチンが単一のエントリポイントと終了点を持つ標準的なルーチンであるのに対し、コルーチンは複数のエントリポイントを持ち、実行を中断および再開できるため、協調して動作するルーチンという概念を表している。","priority":"★★☆"},"pronunciation":{"ipa":"/ˌkɔːruːˈtiːn/","syllables":"co-rou-tine"},"inflection":{"noun_plural":"coroutines"},"usage_notes":{"explanation":"コルーチンは、マルチタスク処理を効率的に行うためのプログラミング概念です。スレッドと似ていますが、より軽量で、コンテキストスイッチのオーバーヘッドが少ないという利点があります。コルーチンは、実行を一時停止（yield）し、後でその状態から再開できるため、非同期処理やイベント駆動型プログラミングに適しています。Python, Kotlin, Go, C# などの多くのプログラミング言語でサポートされています。","priority":"★★☆"},"common_mistakes":{"examples":[{"incorrect":"✗ Coroutines are preemptive.","correct":"✓ Coroutines are non-preemptive.","note":"コルーチンは通常、プリエンプティブではなく、協調的なマルチタスク処理を行います。つまり、コルーチン自身が実行を譲るまで実行され続けます。"},{"incorrect":"✗ Coroutines are the same as threads.","correct":"✓ Coroutines are lightweight and have less overhead than threads.","note":"コルーチンはスレッドよりも軽量で、コンテキストスイッチのオーバーヘッドが少ないという利点があります。スレッドはオペレーティングシステムによって管理されますが、コルーチンは通常、プログラミング言語のランタイムによって管理されます。"}],"priority":"★★☆"},"related_words":{"derivatives":[],"phrasal_verbs":[],"related_concepts":["asynchronous programming","event loop","generator","fiber","green thread","cooperative multitasking"],"priority":"★★☆"},"level_frequency":{"CEFR":"C1","frequency_google_ngram":"比較的低頻度 (Relatively low frequency) - 専門的なプログラミング用語。","priority":"★☆☆"},"readability_explanation":{"level":"C1","text":"「**coroutine**」は、コンピュータプログラムで使われる専門的な用語です。これは、プログラムの一部で、実行を一時停止して、後でその場所から再開できるものです。スレッドと似ていますが、より軽量で、プログラムの効率を上げることができます。非同期処理や並行処理を扱う際に役立ちます。プログラミングの経験がある人にとっては理解しやすい概念ですが、初心者には少し難しいかもしれません。"},"example_sentences":[{"sentence":"The asynchronous nature of coroutines allows for efficient handling of I/O operations.","translation":"コルーチンの非同期的な性質により、I/O操作を効率的に処理できます。","type":"noun","meaning_category":"プログラミング"},{"sentence":"Using coroutines can simplify complex asynchronous code.","translation":"コルーチンを使用すると、複雑な非同期コードを簡素化できます。","type":"noun","meaning_category":"プログラミング"},{"sentence":"The game engine uses coroutines to manage animations and game logic.","translation":"そのゲームエンジンは、アニメーションとゲームロジックを管理するためにコルーチンを使用しています。","type":"noun","meaning_category":"プログラミング"}]}