{"word":"Upcasting","priority":"★★☆","meanings":[{"part_of_speech":"noun","definition":"(プログラミング)派生クラスのオブジェクトを基底クラスの型として扱うこと。","english_definition":"(programming) The process of converting a derived class object to its base class type. This is generally a safe operation because the derived class 'is-a' base class.","examples":[{"sentence":"Upcasting is implicit in many object-oriented languages.","translation":"アップキャスティングは多くのオブジェクト指向言語で暗黙的に行われます。"},{"sentence":"Using upcasting, you can store different types of objects in a single collection.","translation":"アップキャスティングを使うことで、異なる型のオブジェクトを一つのコレクションに格納できます。"}],"collocations":["implicit upcasting (暗黙的なアップキャスティング)","explicit upcasting (明示的なアップキャスティング)","safe upcasting (安全なアップキャスティング)","upcasting in Java (Javaにおけるアップキャスティング)","upcasting in C++ (C++におけるアップキャスティング)"],"synonyms":["generalization","widening conversion"],"antonyms":["downcasting"]}],"etymology":{"value":"「up-」は「上位へ」の意味、「casting」は「型変換」の意味。派生クラスから基底クラスへの型変換が、クラス階層を「上へ」移動することから。","priority":"★★☆"},"pronunciation":{"ipa":"/ˈʌpkæstɪŋ/","syllables":"up-cast-ing"},"inflection":{"noun_plural":"Upcastings"},"usage_notes":{"explanation":"Upcasting is a fundamental concept in object-oriented programming. It allows you to treat objects of derived classes as objects of their base class. This is safe because a derived class always has all the properties and methods of its base class. Upcasting is often implicit, meaning the compiler automatically performs the conversion. It's crucial for polymorphism, allowing you to write code that works with objects of different types through a common base class interface.","priority":"★★★"},"common_mistakes":{"examples":[{"incorrect":"✗ Upcasting is used to access derived class specific methods.","correct":"✓ Upcasting is used to treat derived class objects as base class objects.","note":"Upcasting is about treating a derived class object as its base class, not about accessing derived class specific methods. To access derived class specific methods, you would need to downcast (which requires caution)."},{"incorrect":"✗ Upcasting can cause runtime errors.","correct":"✓ Upcasting is generally safe and doesn't cause runtime errors.","note":"Upcasting is a safe operation and doesn't typically cause runtime errors. Downcasting, if not done carefully, can lead to runtime errors."}],"priority":"★★☆"},"related_words":{"derivatives":["upcast (verb)"],"related_concepts":["inheritance","polymorphism","downcasting","type conversion","object-oriented programming"]},"level_frequency":{"CEFR":"C1","frequency_google_ngram":"Low","priority":"★☆☆"},"readability_explanation":{"level":"C1","text":"'Upcasting' is a programming term related to object-oriented programming. It refers to the process of treating an object of a derived class as if it were an object of its base class. This is a safe conversion because the derived class inherits all the properties and methods of the base class. Upcasting is often implicit, meaning the programmer doesn't need to explicitly specify the conversion. It's an important concept for understanding polymorphism and code reusability in object-oriented languages like Java, C++, and C#."},"example_sentences":[{"sentence":"The method accepts a parameter of type `Animal`, so we can pass a `Dog` object using upcasting.","translation":"そのメソッドは`Animal`型の引数を受け取るので、アップキャスティングを使って`Dog`オブジェクトを渡すことができます。","type":"general","meaning_category":"definition"},{"sentence":"Upcasting allows you to write generic code that works with different types of objects.","translation":"アップキャスティングによって、異なる型のオブジェクトで動作する汎用的なコードを書くことができます。","type":"general","meaning_category":"usage"},{"sentence":"In Java, upcasting is done automatically when you assign a subclass object to a superclass variable.","translation":"Javaでは、サブクラスのオブジェクトをスーパークラスの変数に代入するとき、アップキャスティングは自動的に行われます。","type":"programming language specific","meaning_category":"implementation"}]}