{"word":"lvalues","priority":"☆☆☆","meanings":[{"part_of_speech":"noun","definition":"(プログラミング) 左辺値。メモリ内の識別可能な場所を指す式。代入演算の左側に現れることができる。","english_definition":"(programming) An expression referring to an identifiable memory location, which can appear as the left-hand side of an assignment operation.","examples":[{"sentence":"In the expression `x = 5`, `x` is an lvalue because it represents a memory location where the value 5 can be stored.","translation":"式 `x = 5` において、`x` は値 5 が格納できるメモリ位置を表すため、左辺値です。"},{"sentence":"Lvalues can be variables, dereferenced pointers, or array elements.","translation":"左辺値は、変数、間接参照されたポインタ、または配列要素などです。"}],"collocations":["modifiable lvalue (変更可能な左辺値)","lvalue reference (左辺値参照)","rvalue (右辺値)"],"synonyms":["left-hand side expression","memory addressable value"],"antonyms":["rvalue"],"related_terms":["rvalue reference","move semantics","assignment operator"],"notes":"Lvalues are fundamental to understanding how assignment works in many programming languages, especially C and C++. They contrast with rvalues, which are expressions that can only appear on the right-hand side of an assignment."}],"etymology":{"value":"The term 'lvalue' comes from 'left value', referring to its typical position on the left-hand side of an assignment expression.","priority":"★★★"},"pronunciation":{"ipa":"/ˈɛlˌvæljuːz/","syllables":"el-val-ues"},"inflection":{"noun_plural":"lvalues"},"usage_notes":{"explanation":"'lvalues' are expressions that represent a memory location. They are essential for assignment operations, where a value is stored in that location. Understanding lvalues is crucial for grasping pointer arithmetic, references, and memory management in languages like C and C++.","priority":"★★★"},"common_mistakes":{"examples":[{"incorrect":"✗ A literal value like `5` can be an lvalue.","correct":"✓ A literal value like `5` is an rvalue, not an lvalue.","note":"Literal values do not represent memory locations and therefore cannot be lvalues."},{"incorrect":"✗ Only variables are lvalues.","correct":"✓ Variables, dereferenced pointers, and array elements can be lvalues.","note":"Lvalues can take several forms beyond simple variables."}],"priority":"★★★"},"related_words":{"derivatives":[],"related_concepts":["rvalue","pointers","references","assignment","memory address"],"priority":"★★★"},"level_frequency":{"frequency_google_ngram":"Low frequency - primarily used in technical documentation and programming contexts.","priority":"★☆☆"},"readability_explanation":{"level":"C1","text":"'lvalues' are a programming concept that refers to expressions representing memory locations. These expressions can be found on the left side of an assignment operation, where a value is being stored. Understanding 'lvalues' is important for grasping how data is manipulated in programming languages like C and C++. They contrast with 'rvalues', which are expressions that can only appear on the right side of an assignment."},"example_sentences":[{"sentence":"The variable `age` is an lvalue because it refers to a specific memory location.","translation":"変数 `age` は特定のメモリ位置を参照するため、左辺値です。","type":"noun","meaning_category":"programming concept"},{"sentence":"You can assign a new value to an lvalue, such as `age = 30`.","translation":"`age = 30` のように、左辺値に新しい値を代入できます。","type":"noun","meaning_category":"programming concept"},{"sentence":"Dereferencing a pointer creates an lvalue that can be modified.","translation":"ポインタの間接参照は、変更可能な左辺値を生成します。","type":"noun","meaning_category":"programming concept"}]}