{"word":"lvalue","priority":"★★☆","meanings":[{"part_of_speech":"noun","definition":"(プログラミング) 代入演算子の左辺に置くことができる式。通常、メモリ内の場所を表し、値を格納できる。","english_definition":"(programming) An expression that can appear on the left-hand side of an assignment operator; typically represents a memory location that can store a value.","examples":[{"sentence":"In the expression `x = 5`, `x` is an lvalue because it refers to a memory location where the value 5 can be stored.","translation":"式 `x = 5` において、`x` は lvalue です。なぜなら、それは値 5 が格納できるメモリ位置を参照するからです。"},{"sentence":"Lvalues can be variables, array elements, or dereferenced pointers.","translation":"Lvalue は、変数、配列要素、または間接参照されたポインタである可能性があります。"}],"collocations":["modifiable lvalue (変更可能な lvalue)","non-modifiable lvalue (変更不可能な lvalue)","lvalue conversion (lvalue 変換)","assign to an lvalue (lvalue に代入する)"],"synonyms":["left-hand side expression","assignable expression"],"antonyms":["rvalue"]},{"part_of_speech":"noun","definition":"(C++プログラミング) lvalue参照または関数呼び出しの結果など、IDを持ち、メモリ内の特定の場所を占めるオブジェクトを指す式。","english_definition":"(C++ programming) An expression that designates an object that has an identity and occupies a specific location in memory, such as an lvalue reference or the result of a function call.","examples":[{"sentence":"In C++, an lvalue is an expression that refers to a specific memory location.","translation":"C++ では、lvalue は特定のメモリ位置を参照する式です。"},{"sentence":"Lvalues can be used on both the left and right sides of an assignment operator.","translation":"Lvalue は、代入演算子の左側と右側の両方で使用できます。"}],"collocations":["lvalue reference (lvalue 参照)","xvalue (期限切れの値)","prvalue (純粋な右辺値)","glvalue (汎用的な lvalue)"],"synonyms":["glvalue (generalized lvalue)"],"antonyms":["rvalue (right value)"]}],"etymology":{"value":"「left value」の略。代入演算子の左側に現れることができる値に由来する。","priority":"★★★"},"pronunciation":{"ipa":"/ˈɛlˌvæljuː/","syllables":"el-val-ue"},"inflection":{"notes":"複数形は lvalues"},"usage_notes":{"explanation":"`lvalue` は、プログラミング言語（特に C および C++）において、代入演算子の左辺に置くことができる式を指す用語です。これは、メモリ内の特定の場所（変数など）を指し、値を格納できるものを意味します。一方、代入演算子の右辺に置かれる式は `rvalue` と呼ばれ、通常は値そのものを表します。C++11 以降では、`lvalue` の概念が拡張され、`glvalue` (generalized lvalue) というより一般的なカテゴリの一部となりました。`glvalue` は、`lvalue` と `xvalue` (expiring value) を含みます。","priority":"★★★"},"common_mistakes":{"examples":[{"incorrect":"✗ A literal value like `5` is an lvalue.","correct":"✓ A variable like `x` is an lvalue.","note":"リテラル値（例：`5`）はメモリ位置を持たないため、lvalue ではありません。変数（例：`x`）はメモリ位置を持つため、lvalue になり得ます。"},{"incorrect":"✗ Only lvalues can be used in expressions.","correct":"✓ Both lvalues and rvalues can be used in expressions.","note":"式では、lvalue と rvalue の両方を使用できます。lvalue はメモリ位置を指し、rvalue は値を指します。"}],"priority":"★★☆"},"related_words":{"derivatives":[],"phrasal_verbs":[],"related_concepts":["rvalue","glvalue","xvalue","prvalue","lvalue reference","rvalue reference","assignment operator"],"priority":"★★★"},"level_frequency":{"CEFR":"C2","frequency_google_ngram":"Low frequency (専門用語)","priority":"★☆☆"},"readability_explanation":{"level":"C1","text":"`lvalue` は、プログラミング言語、特に C や C++ で使われる専門用語です。これは、代入演算子（`=`）の左側に書けるものを指し、通常はメモリ内の場所（変数など）を表します。つまり、値を保存できる場所のことです。反対に、右側に書けるものは `rvalue` と呼ばれ、具体的な値そのものを指します。C++ では、`lvalue` の概念がより複雑になり、`glvalue` というより広い概念に含まれるようになりました。プログラミングを深く理解するためには、`lvalue` と `rvalue` の違いを把握することが重要です。"},"example_sentences":[{"sentence":"The variable `count` is an **lvalue** because it represents a memory location.","translation":"変数 `count` はメモリ位置を表すため、**lvalue** です。","type":"definition"},{"sentence":"You can assign a new value to an **lvalue**.","translation":"**lvalue** に新しい値を代入できます。","type":"usage"},{"sentence":"In C++, an **lvalue reference** allows you to refer to an **lvalue** directly.","translation":"C++ では、**lvalue参照** を使用すると、**lvalue** を直接参照できます。","type":"example"},{"sentence":"An array element, such as `arr[0]`, is also an **lvalue**.","translation":"`arr[0]` のような配列要素も **lvalue** です。","type":"example"}]}