{"word":"subexpressions","priority":"☆☆☆","meanings":[{"part_of_speech":"noun","definition":"(プログラミング)部分式：より大きな式の一部である式。","english_definition":"(programming) Expressions that are part of a larger expression.","examples":[{"sentence":"The compiler optimizes the code by evaluating constant subexpressions at compile time.","translation":"コンパイラは、コンパイル時に定数の部分式を評価することでコードを最適化します。"},{"sentence":"Parentheses are used to group subexpressions and control the order of evaluation.","translation":"括弧は、部分式をグループ化し、評価の順序を制御するために使用されます。"}],"collocations":["evaluate subexpressions","optimize subexpressions","group subexpressions","nested subexpressions"],"synonyms":["partial expression","nested expression"],"antonyms":["main expression","top-level expression"]}],"etymology":{"value":"\"sub-\"（下の、部分的な）と \"expression\"（式）の組み合わせ。","priority":"★★★"},"pronunciation":{"ipa":"/ˌsʌbɪkˈspreʃənz/","syllables":"sub-ex-pres-sions"},"inflection":{"noun_plural":"subexpressions"},"usage_notes":{"explanation":"\"Subexpressions\"は、プログラミングや数式において、より大きな式の一部を指します。括弧を使って明示的にグループ化されることが多く、評価の順序を制御するために重要です。コンパイラ最適化や数式処理において重要な概念です。","priority":"★★★"},"common_mistakes":{"examples":[{"incorrect":"✗ The subexpression is the main expression.","correct":"✓ The subexpression is part of the main expression.","note":"部分式は主式の一部であり、主式そのものではありません。"},{"incorrect":"✗ Subexpressions are not important in complex equations.","correct":"✓ Subexpressions are important in complex equations to define the order of operations.","note":"複雑な方程式では、演算の順序を定義するために部分式が重要です。"}],"priority":"★★☆"},"related_words":{"derivatives":["expression","variable","operator","operand","compiler","parser"],"phrasal_verbs":[],"priority":"★★★"},"level_frequency":{"CEFR":"C2","frequency_google_ngram":"Low frequency","priority":"★☆☆"},"readability_explanation":{"level":"C1","text":"The term \"subexpressions\" is used in computer science and mathematics to refer to parts of a larger expression. Understanding this term is important for advanced programming and mathematical analysis where complex equations and code structures are common. It implies a hierarchical structure where smaller expressions are nested within larger ones, affecting how the overall expression is evaluated or processed."},"example_sentences":[{"sentence":"The parser identifies and evaluates all subexpressions within the code.","translation":"パーサーは、コード内のすべての部分式を識別して評価します。","type":"general","meaning_category":"definition"},{"sentence":"Complex mathematical formulas often contain multiple nested subexpressions.","translation":"複雑な数式には、多くの場合、複数のネストされた部分式が含まれています。","type":"specific","meaning_category":"example"}]}