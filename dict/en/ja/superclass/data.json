{"word":"superclass","priority":"★★☆","meanings":[{"part_of_speech":"noun","definition":"(プログラミング) スーパークラス、親クラス: オブジェクト指向プログラミングにおいて、他のクラス (サブクラス) が属性やメソッドを継承するクラス。","english_definition":"(in object-oriented programming) a class from which other classes (subclasses) inherit attributes and methods; also known as a parent class or base class.","examples":[{"sentence":"In this example, 'Animal' is the superclass of 'Dog' and 'Cat'.","translation":"この例では、「Animal」は「Dog」と「Cat」のスーパークラスです。"},{"sentence":"The superclass provides a common interface for all its subclasses.","translation":"スーパークラスは、すべてのサブクラスに共通のインターフェースを提供します。"},{"sentence":"You can define common functionalities in the superclass to avoid code duplication in subclasses.","translation":"スーパークラスに共通の機能を定義することで、サブクラスでのコードの重複を避けることができます。"}],"collocations":["define a superclass (スーパークラスを定義する)","inherit from a superclass (スーパークラスから継承する)","extend a superclass (スーパークラスを拡張する)","superclass constructor (スーパークラスのコンストラクタ)","abstract superclass (抽象スーパークラス)"],"synonyms":["parent class","base class"],"antonyms":["subclass","child class"]}],"etymology":{"value":"'super-' (上位の、超える) と 'class' (分類、階級) の組み合わせ。オブジェクト指向プログラミングの階層構造において、より一般的なクラスがより特殊なクラスの上位に位置することから。","priority":"★★★"},"pronunciation":{"ipa":"/ˈsuːpərklæs/","syllables":"su-per-class"},"inflection":{"noun_plural":"superclasses"},"usage_notes":{"explanation":"「**superclass**」は、オブジェクト指向プログラミングにおける重要な概念です。スーパークラスは、サブクラス（子クラス）に共通の属性やメソッドを定義し、コードの再利用性と保守性を高めます。サブクラスはスーパークラスの機能を継承し、必要に応じて独自の機能を追加したり、継承した機能をオーバーライド（上書き）したりすることができます。多態性（ポリモーフィズム）を実現する上でも重要な役割を果たします。抽象クラスとしてスーパークラスを定義することで、特定のインターフェースを強制することも可能です。","priority":"★★★"},"common_mistakes":{"examples":[{"incorrect":"✗ The superclass is more specific than the subclass.","correct":"✓ The superclass is more general than the subclass.","note":"スーパークラスはサブクラスよりも一般的（general）な概念を表します。"},{"incorrect":"✗ You must implement all methods from the superclass in the subclass.","correct":"✓ You can choose to override or extend methods from the superclass in the subclass.","note":"サブクラスはスーパークラスから継承したメソッドを必ずしも実装する必要はありません。オーバーライド（上書き）するか、そのまま利用するか、拡張するかを選択できます。"},{"incorrect":"✗ The superclass is a type of the subclass.","correct":"✓ The subclass is a type of the superclass.","note":"サブクラスはスーパークラスの特殊な型（type）です。"}],"priority":"★★☆"},"related_words":{"derivatives":["supertype (スーパタイプ: スーパークラスの別の呼び方)"],"related_terms":["inheritance (継承)","polymorphism (ポリモーフィズム、多態性)","abstraction (抽象化)","encapsulation (カプセル化)","object-oriented programming (オブジェクト指向プログラミング)","class (クラス)","object (オブジェクト)","method (メソッド)","attribute (属性)"],"priority":"★★★"},"level_frequency":{"frequency_google_ngram":"比較的低頻度 (Relatively low frequency) - プログラミング関連の専門用語。","priority":"★☆☆"},"readability_explanation":{"level":"C1","text":"「**superclass**」は、プログラミング、特にオブジェクト指向プログラミングで使われる言葉です。これは、他のクラスが機能（メソッド）や情報（属性）を受け継ぐ元のクラスのことを指します。例えば、「動物」というスーパークラスがあった場合、「犬」や「猫」といったサブクラスは、動物としての基本的な性質を受け継ぎつつ、それぞれ独自の性質を持つことができます。スーパークラスを使うことで、プログラムを整理しやすく、同じコードを何度も書く手間を省くことができます。"},"example_sentences":[{"sentence":"The 'Shape' class is a **superclass** for 'Circle' and 'Square'.","translation":"「Shape」クラスは「Circle」クラスと「Square」クラスのスーパークラスです。","type":"noun","meaning_category":"プログラミング"},{"sentence":"We can define a common 'draw' method in the **superclass** to be used by all subclasses.","translation":"すべてのサブクラスで使用される共通の「draw」メソッドをスーパークラスで定義できます。","type":"noun","meaning_category":"プログラミング"},{"sentence":"The subclass 'Car' inherits the 'startEngine' method from its **superclass** 'Vehicle'.","translation":"サブクラス「Car」は、スーパークラス「Vehicle」から「startEngine」メソッドを継承します。","type":"noun","meaning_category":"プログラミング"}]}