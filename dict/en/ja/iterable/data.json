{"word":"iterable","priority":"★★☆","meanings":[{"part_of_speech":"adjective","definition":"(プログラミング)反復可能な、繰り返し処理できる","english_definition":"(in programming) capable of being iterated over; able to return its members one at a time.","examples":[{"sentence":"A list is an iterable object in Python.","translation":"リストはPythonにおいて反復可能なオブジェクトです。"},{"sentence":"You can loop through an iterable to access each element.","translation":"反復可能なオブジェクトをループ処理することで、各要素にアクセスできます。"},{"sentence":"Strings are iterable, so you can iterate over the characters.","translation":"文字列は反復可能なので、文字を反復処理できます。"}],"collocations":["iterable object","iterable data structure","iterate over an iterable"],"synonyms":["enumerable","traversable"],"antonyms":["non-iterable"]}],"etymology":{"value":"Derived from 'iterate' (to perform repeatedly) + '-able' (capable of being).","priority":"★★☆"},"pronunciation":{"ipa":"ˈɪtərəbəl/","syllables":"it-er-a-ble"},"inflection":{"notes":"No specific inflection as it is an adjective."},"usage_notes":{"explanation":"In programming, an **iterable** is an object (like a list, tuple, string, or dictionary) that can be looped over, meaning its elements can be accessed one by one. This is typically achieved using a `for` loop or similar construct. The object must implement the `__iter__()` method (or `__getitem__()` method with sequential integer indices) to be considered iterable.  Iterables are fundamental to many programming tasks involving data processing and manipulation.","priority":"★★★"},"common_mistakes":{"examples":[{"incorrect":"✗ The variable is iterable, so I can add numbers to it.","correct":"✓ The variable is iterable, so I can loop through its elements.","note":"Being iterable means you can loop through the elements, not that you can modify the iterable itself or its elements directly in all cases."},{"incorrect":"✗ Only lists are iterable.","correct":"✓ Lists, tuples, strings, and dictionaries are examples of iterables.","note":"Many data structures can be iterable, not just lists."}],"priority":"★★☆"},"related_words":{"derivatives":["iteration (名詞: 反復)","iterator (名詞: イテレータ)","iterate (動詞: 反復する)"],"related_terms":["generator","sequence","collection","loop","for loop","while loop"],"priority":"★★★"},"level_frequency":{"CEFR":"N/A (Technical term, not typically part of general language learning)","frequency_google_ngram":"Relatively low frequency, primarily used in technical contexts.","priority":"★☆☆"},"readability_explanation":{"level":"C1","text":"In computer science, an **iterable** is a data structure that can be traversed element by element. This means you can use a loop (like a `for` loop) to access each item in the structure sequentially. Common examples include lists, tuples, and strings. The key characteristic is the ability to retrieve elements one at a time without needing to know the structure's internal details. The concept is fundamental to many programming paradigms and data processing techniques."},"example_sentences":[{"sentence":"The `range()` function returns an **iterable** object.","translation":"`range()`関数は反復可能なオブジェクトを返します。","type":"general","meaning_category":"Definition"},{"sentence":"We used a `for` loop to iterate over the **iterable**.","translation":"`for`ループを使って、反復可能なオブジェクトを反復処理しました。","type":"usage","meaning_category":"Usage"},{"sentence":"Check if the object is **iterable** before attempting to loop through it.","translation":"オブジェクトをループ処理する前に、それが反復可能かどうかを確認してください。","type":"caution","meaning_category":"Caution"}]}