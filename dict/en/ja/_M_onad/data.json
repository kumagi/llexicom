{"word":"Monad","priority":"★☆☆","meanings":[{"part_of_speech":"noun","definition":"(哲学)モナド：分割不能な、宇宙の究極の構成要素である単一の実体。ライプニッツ哲学における中心概念。","english_definition":"(philosophy) An indivisible and hence ultimately simple entity, regarded as the fundamental constituent of the universe. A central concept in Leibniz's philosophy.","examples":[{"sentence":"Leibniz believed that the universe was composed of an infinite number of monads.","translation":"ライプニッツは、宇宙は無限の数のモナドから構成されていると信じていた。"},{"sentence":"Each monad reflects the entire universe from its own unique perspective.","translation":"各モナドは、それ自身のユニークな視点から宇宙全体を反映している。"}],"collocations":["Leibnizian monad","windowless monad","pre-established harmony of monads"],"synonyms":["atom","element","unit","entity"],"antonyms":["aggregate","compound"]},{"part_of_speech":"noun","definition":"(プログラミング)モナド：ある種の計算を構造化するためのデザインパターン。関数型プログラミングで、副作用を伴う処理を安全に扱うために用いられる。","english_definition":"(programming) A design pattern used to structure computations in a certain way. In functional programming, it is used to handle side effects safely.","examples":[{"sentence":"Monads allow you to chain operations together while managing state and side effects.","translation":"モナドを使用すると、状態と副作用を管理しながら操作を連鎖させることができる。"},{"sentence":"The Maybe monad is used to handle computations that might fail.","translation":"Maybeモナドは、失敗する可能性のある計算を処理するために使用される。"},{"sentence":"Understanding monads can be challenging, but they are a powerful tool in functional programming.","translation":"モナドを理解するのは難しいかもしれませんが、関数型プログラミングでは強力なツールです。"}],"collocations":["IO monad","Maybe monad","List monad","State monad","monadic computation"],"synonyms":["design pattern","functional structure"],"antonyms":[]}],"etymology":{"value":"ギリシャ語の 'monas' (単位、単一のもの) から派生し、'monos' (単一の) に由来する。","priority":"★★☆"},"pronunciation":{"ipa":"ˈmɒnæd","syllables":"mo-nad"},"inflection":{"noun_plural":"monads"},"usage_notes":{"explanation":"「**Monad**」は、哲学とプログラミングという異なる分野で使用される専門用語です。\n1. **哲学**: ライプニッツ哲学におけるモナドは、分割不能な、宇宙の究極の構成要素である単一の実体を指します。各モナドは宇宙全体を反映していますが、他のモナドとの直接的な相互作用はありません。\n2. **プログラミング**: 関数型プログラミングにおけるモナドは、副作用を伴う処理を安全に扱うためのデザインパターンです。モナドを使用すると、状態と副作用を管理しながら、一連の操作を連鎖させることができます。Haskellなどの関数型言語でよく使用されます。","priority":"★★★"},"common_mistakes":{"examples":[{"incorrect":"✗ I saw a monad in the sky.","correct":"✓ (Context is needed, but this is unlikely to be correct without further explanation.)","note":"「monad」は日常的な会話で使われる単語ではありません。哲学またはプログラミングの文脈でのみ使用されます。"},{"incorrect":"✗ Monads are easy to understand.","correct":"✓ Understanding monads can be challenging.","note":"プログラミングにおけるモナドの概念は、初心者には理解が難しいことで知られています。"}],"priority":"★★☆"},"related_words":{"derivatives":["monadic (形容詞: モナドの、モナド的な)","monadology (名詞: モナド論)"],"related_concepts":["functional programming","side effects","Leibnizian philosophy","category theory (mathematical foundation for monads in programming)"],"priority":"★★☆"},"level_frequency":{"CEFR":"C2 (専門用語のため、一般的には高レベル)","frequency_google_ngram":"低頻度 (Low frequency) - 専門用語のため、一般的なテキストではほとんど見られない。","priority":"★☆☆"},"readability_explanation":{"level":"C1","text":"「**Monad**」は、哲学または関数型プログラミングで使用される専門用語です。哲学では、宇宙の基本的な構成要素である分割不能な実体を指します。関数型プログラミングでは、副作用を伴う計算を構造化するためのデザインパターンです。どちらの分野でも、高度な概念であり、理解するにはそれぞれの分野の知識が必要です。日常会話で使われることはほとんどありません。"},"example_sentences":[{"sentence":"In Leibniz's philosophy, each **monad** is a unique center of perception.","translation":"ライプニッツの哲学では、各モナドは知覚のユニークな中心である。","type":"noun","meaning_category":"哲学"},{"sentence":"The IO **monad** in Haskell allows you to perform input and output operations in a purely functional way.","translation":"HaskellのIOモナドを使用すると、純粋関数型で入出力操作を実行できる。","type":"noun","meaning_category":"プログラミング"},{"sentence":"Understanding **monads** is essential for writing complex functional programs.","translation":"モナドを理解することは、複雑な関数型プログラムを作成するために不可欠である。","type":"noun","meaning_category":"プログラミング"}]}