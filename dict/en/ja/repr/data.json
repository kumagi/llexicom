{"word":"repr","priority":"☆☆☆","meanings":[{"part_of_speech":"function (Python)","definition":"Pythonプログラミング言語における組み込み関数の一つで、オブジェクトの「公式」表現を文字列として返す。この表現は、可能であれば、そのオブジェクトを再構築するためにeval()関数に渡すことができる形式であるべき。","english_definition":"A built-in function in the Python programming language that returns a string containing a printable representation of an object. This representation should, if possible, be an expression that can be used to recreate the object using the eval() function.","examples":[{"sentence":"x = 10\nrepr(x)  # Output: '10'","translation":"x = 10\nrepr(x)  # 出力: '10'"},{"sentence":"s = 'Hello, world!'\nrepr(s)  # Output: \"'Hello, world!'\"","translation":"s = 'Hello, world!'\nrepr(s)  # 出力: \"'Hello, world!'\""},{"sentence":"class Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def __repr__(self):\n        return f'Point(x={self.x}, y={self.y})'\n\np = Point(2, 3)\nrepr(p)  # Output: 'Point(x=2, y=3)'","translation":"class Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def __repr__(self):\n        return f'Point(x={self.x}, y={self.y})'\n\np = Point(2, 3)\nrepr(p)  # 出力: 'Point(x=2, y=3)'"}],"collocations":["repr(object)","__repr__() method","eval(repr(object))"],"synonyms":["string representation","official representation"],"antonyms":["str() (returns a user-friendly representation)"]},{"part_of_speech":"abbreviation","definition":"representationの略","english_definition":"Abbreviation for representation.","examples":[{"sentence":"The repr of this object is not very informative.","translation":"このオブジェクトの表現はあまり有益ではありません。"}],"collocations":["data repr","object repr"],"synonyms":["representation"],"antonyms":[]}],"etymology":{"value":"Pythonのrepr()関数は、representation（表現）の短縮形。オブジェクトを文字列として表現するという関数の目的を表している。","priority":"★★★"},"pronunciation":{"ipa":"/rɛpr/","syllables":"repr"},"inflection":{"notes":"関数名なので活用形はありません。"},"usage_notes":{"explanation":"repr()関数は、オブジェクトを明確かつ曖昧さなく表現することを目的としています。特に、デバッグやログ出力において役立ちます。クラスを定義する際には、__repr__()メソッドを実装することで、そのクラスのインスタンスがどのようにrepr()関数によって表現されるかを制御できます。str()関数もオブジェクトを文字列に変換しますが、str()はより人間が読みやすい形式を返すことを意図しています。repr()は、可能であれば、eval()でオブジェクトを再構築できるような形式を返すことを目指します。","priority":"★★★"},"common_mistakes":{"examples":[{"incorrect":"✗ repr(object) == str(object)","correct":"✓ repr(object) != str(object) (in many cases)","note":"repr()とstr()は異なる目的で使用され、通常は異なる文字列を返します。repr()は開発者向けの明確な表現、str()はユーザー向けの読みやすい表現を目指します。"},{"incorrect":"✗ forgetting to implement __repr__() in a custom class","correct":"✓ implementing __repr__() in a custom class for better debugging","note":"カスタムクラスでは、__repr__()メソッドを実装することで、インスタンスのデバッグが容易になります。"}],"priority":"★★☆"},"related_words":{"derivatives":["representation"],"phrasal_verbs":[],"related_functions":["str()","eval()"],"priority":"★★★"},"level_frequency":{"CEFR":"C1","frequency_google_ngram":"低頻度","priority":"★☆☆"},"readability_explanation":{"level":"C1","text":"`repr` は、Pythonプログラミングにおいて、オブジェクトを文字列で表現するための関数またはその表現自体の略称として使われます。特に、オブジェクトの内容を明確に把握したい場合や、デバッグの際に役立ちます。カスタムクラスを作成する際には、`__repr__` メソッドを定義することで、オブジェクトがどのように文字列として表現されるかを制御できます。`str` 関数も似た目的で使用されますが、`repr` はより詳細で、オブジェクトを再構築可能な形式を目指す点が異なります。"},"example_sentences":[{"sentence":"The `repr()` function returns a string representation of the object.","translation":"`repr()`関数は、オブジェクトの文字列表現を返します。","type":"function","meaning_category":"関数の説明"},{"sentence":"Implement `__repr__` in your class to provide a useful string representation for debugging.","translation":"デバッグに役立つ文字列表現を提供するために、クラスに`__repr__`を実装してください。","type":"code example","meaning_category":"コード例"},{"sentence":"`eval(repr(obj))` should, ideally, recreate the object `obj`.","translation":"理想的には、`eval(repr(obj))`はオブジェクト`obj`を再作成できるべきです。","type":"explanation","meaning_category":"説明"}]}