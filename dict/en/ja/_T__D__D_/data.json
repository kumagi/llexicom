{"word":"TDD","priority":"★★★","meanings":[{"part_of_speech":"noun","definition":"テスト駆動開発（テスト駆動プログラミング）","english_definition":"Test-Driven Development (Test-Driven Programming): A software development process that relies on the repetition of a very short development cycle: Requirements are turned into very specific test cases, then the software is improved to pass the new tests, simplifying and clarifying requirements.","examples":[{"sentence":"TDD helps to produce cleaner code.","translation":"TDDはよりクリーンなコードを生み出すのに役立ちます。"},{"sentence":"We adopted TDD for this project.","translation":"このプロジェクトではTDDを採用しました。"},{"sentence":"The core principle of TDD is 'Red-Green-Refactor'.","translation":"TDDの中核原則は「レッド・グリーン・リファクタ」です。"}],"collocations":["implement TDD (TDDを実装する)","practice TDD (TDDを実践する)","use TDD (TDDを使用する)","TDD cycle (TDDサイクル)","TDD process (TDDプロセス)","TDD methodology (TDD方法論)"],"synonyms":["test-first development","test-driven programming"],"antonyms":["waterfall model","big bang integration"]}],"etymology":{"value":"略語。ソフトウェア開発手法であるTest-Driven Developmentの頭文字から。","priority":"★★★"},"pronunciation":{"ipa":"/ˌtiːˌdiːˈdiː/","syllables":"tee-dee-dee"},"inflection":{"notes":"不可算名詞"},"usage_notes":{"explanation":"TDDは、ソフトウェア開発手法の一つで、最初にテストコードを書き、次にそのテストをパスする最小限のコードを書き、最後にコードをリファクタリングするというサイクルを繰り返します。この手法は、よりシンプルで保守性の高いコードを生み出すのに役立ちます。","priority":"★★★"},"common_mistakes":{"examples":[{"incorrect":"✗ I'm doing a TDD for this feature.","correct":"✓ I'm using TDD for this feature.","note":"TDDは手法なので、`do`よりも`use`を使う方が適切です。"},{"incorrect":"✗ TDD is a test.","correct":"✓ TDD is a development methodology.","note":"TDDはテストそのものではなく、テストを重視した開発手法です。"}],"priority":"★★☆"},"related_words":{"derivatives":["test-driven (形容詞: テスト駆動の)","refactor (動詞: リファクタリングする；名詞: リファクタリング)"],"related_concepts":["unit testing","integration testing","agile development","extreme programming (XP)","continuous integration (CI)"],"priority":"★★★"},"level_frequency":{"CEFR":"C1","frequency_google_ngram":"比較的低頻度 (Relatively low frequency) - ソフトウェア開発の専門用語。","priority":"★☆☆"},"readability_explanation":{"level":"C1","text":"「**TDD**」は、Test-Driven Development（テスト駆動開発）の略で、ソフトウェアを作る方法の一つです。最初にプログラムがどう動くかを決めるテストを書き、次にそのテストに合うようにプログラムを作ります。最後に、コードを整理してきれいにします。この方法を使うと、バグが少なく、変更しやすいプログラムを作ることができます。プログラミングの専門用語なので、IT関係の仕事をしている人によく使われます。"},"example_sentences":[{"sentence":"The team decided to implement **TDD** to improve code quality.","translation":"チームはコード品質を向上させるためにTDDを実装することを決定しました。","type":"general","meaning_category":"テスト駆動開発"},{"sentence":"With **TDD**, you write the test before you write the code.","translation":"TDDでは、コードを書く前にテストを書きます。","type":"general","meaning_category":"テスト駆動開発"},{"sentence":"**TDD** helps ensure that the code meets the specified requirements.","translation":"TDDは、コードが指定された要件を満たすことを保証するのに役立ちます。","type":"general","meaning_category":"テスト駆動開発"}]}